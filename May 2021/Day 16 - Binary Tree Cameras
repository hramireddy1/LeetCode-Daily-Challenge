# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    cameras = 0
    def minCameraCover(self, root: TreeNode) -> int:
        #0 - Node contains a camera
        #1 - Node is covered
        #-1 - Node needs to be covered
        
        def dfs(node):
            if not node:
                return 1
            left = dfs(node.left)
            right = dfs(node.right)
            if left==-1 or right==-1:
                self.cameras+=1
                return 0
            if left==0 or right==0:
                return 1
            if left==1 and right==1:
                return -1
            
        if(dfs(root)) == -1:
            self.cameras+=1
        return self.cameras
            
        
            
        
        

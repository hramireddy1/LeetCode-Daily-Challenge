class Solution:

    def __init__(self, radius: float, x_center: float, y_center: float):
        self.r = radius
        self.x_center = x_center
        self.y_center = y_center
        self.x_min, self.x_max = x_center - radius, x_center + radius
        self.y_min, self.y_max = y_center - radius, y_center + radius        

    def randPoint(self) -> List[float]:
        '''
        while True:
            x,y = random.uniform(self.x_min,self.x_max), random.uniform(self.y_min, self.y_max)
            if (x-self.x_center)**2 + (y-self.y_center)**2 <= self.r**2:
                return [x,y]
        '''
        R = self.r * math.sqrt(random.random())
        theta = 2*math.pi*random.random()
        return [self.x_center + R*math.cos(theta), self.y_center + R*math.sin(theta)]


# Your Solution object will be instantiated and called as such:
# obj = Solution(radius, x_center, y_center)
# param_1 = obj.randPoint()

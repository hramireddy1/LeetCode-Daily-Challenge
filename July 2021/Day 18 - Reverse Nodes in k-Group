# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def reverseKGroup(self, head: ListNode, k: int) -> ListNode:
        dummy = ListNode(0)
        dummy.next = head
        prev, end, curr = dummy, dummy, dummy
        count = 0
        while curr.next:
            curr = curr.next
            count+=1
        while count >= k:
            curr = end = prev.next
            nxt = curr.next
            for _ in range(k-1):
                tmp = nxt.next
                nxt.next = curr
                curr = nxt
                nxt = tmp
            prev.next = curr
            end.next = nxt
            prev = end
            count -= k
        return dummy.next
            
            
            
        
        

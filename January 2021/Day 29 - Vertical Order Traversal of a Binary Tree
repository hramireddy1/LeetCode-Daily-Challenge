# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def verticalTraversal(self, root: TreeNode) -> List[List[int]]:
        point_list = []
        def dfs(root, x ,y):
            point_list.append([root.val,x,y])
            if root.left:
                dfs(root.left,x-1,y-1)
            if root.right:
                dfs(root.right,x+1,y-1)
        
        dfs(root,0,0)
        point_list.sort(key = lambda a: a[0])
        point_list.sort(key = lambda a: a[2], reverse=True)
        point_list.sort(key = lambda a:a[1])
        
        left = abs(point_list[0][1])
        right = point_list[-1][1]
        res = []
        for i in range(left+right+1):
            res.append([j[0] for j in point_list if j[1]==i-left])
        return res
